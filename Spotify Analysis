CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

SELECT * FROM BIT_DB.Spotifydata;

--Who are the top 10 songs and their artists?

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

--What artist released the longest song?

SELECT artist_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

--What's the average danceability for the 10 most popular songs?
--figuring out popularity for top ten first

SELECT popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC;

SELECT AVG(danceability)
FROM BIT_DB.Spotifydata
WHERE popularity >= 92;

--What is the average danceability by artist?

SELECT artist_name, ROUND(AVG(danceability),3)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(danceability) DESC;

--List top ten songs with the highest tempo and their length

SELECT track_name, tempo, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY tempo DESC
LIMIT 10;

--List top ten songs with highest energy and their loudness

SELECT track_name, energy, loudness
FROM BIT_DB.Spotifydata
ORDER BY energy DESC
LIMIT 10;

--List average duration of the top 10 popular songs
--figure out how the top 10 duration first

SELECT duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC;

SELECT AVG(duration_ms)
FROM BIT_DB.Spotifydata
WHERE duration_ms >= 229227;

--Top ten songs to hear live

SELECT track_name, liveness
FROM BIT_DB.Spotifydata
ORDER BY liveness DESC
LIMIT 10;

--Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”
--Use a CTE

WITH star_rank AS (SELECT spfy.artist_name,
AVG(spfy.popularity) AS average_popularity
FROM Spotifydata spfy
GROUP BY spfy.artist_name)

SELECT artist_name, average_popularity, "Top Star" AS "Tag"
FROM star_rank
WHERE average_popularity >= 90
ORDER BY average_popularity DESC;


